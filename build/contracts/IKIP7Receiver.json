{
  "contractName": "IKIP7Receiver",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "onKIP7Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onKIP7Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onKIP7Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IKIP7} `amount` is transferred to this contract via {IKIP7-safeTransfer} or {IKIP7-safeTransferFrom} by `operator` from `from`, this function is called. {onKIP7Received} must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IKIP7Receiver.onKIP7Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@klaytn/contracts/KIP/token/KIP7/IKIP7Receiver.sol\":\"IKIP7Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@klaytn/contracts/KIP/token/KIP7/IKIP7Receiver.sol\":{\"keccak256\":\"0x67261ba02258b78860bff7a0a955474f7831d6bb00d7027859b63e0ff1f05a4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aacb28d196440a8cde1383f8c988992d5842ca610f2cb13b7f79aae15feb9176\",\"dweb:/ipfs/Qma7fkd2hm9Yho8Jbjb2mp52ziawEiPFpfA6qNEZfp9rwm\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n// Klaytn Contract Library v1.0.0 (KIP/token/KIP7/IKIP7Receiver.sol)\n// Based on OpenZeppelin Contracts v4.5.0 (token/ERC20/IERC20Receiver.sol)\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\n\npragma solidity ^0.8.0;\n\ninterface IKIP7Receiver {\n    /**\n     * @dev Whenever an {IKIP7} `amount` is transferred to this contract via {IKIP7-safeTransfer}\n     * or {IKIP7-safeTransferFrom} by `operator` from `from`, this function is called.\n     *\n     * {onKIP7Received} must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IKIP7Receiver.onKIP7Received.selector`.\n     */\n    function onKIP7Received(\n        address operator,\n        address from,\n        uint256 amount,\n        bytes calldata _data\n    ) external returns (bytes4);\n}\n",
  "sourcePath": "@klaytn\\contracts\\KIP\\token\\KIP7\\IKIP7Receiver.sol",
  "ast": {
    "absolutePath": "@klaytn/contracts/KIP/token/KIP7/IKIP7Receiver.sol",
    "exportedSymbols": {
      "IKIP7Receiver": [
        2017
      ]
    },
    "id": 2018,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2002,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "255:23:14"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IKIP7Receiver",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 2017,
        "linearizedBaseContracts": [
          2017
        ],
        "name": "IKIP7Receiver",
        "nameLocation": "290:13:14",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 2003,
              "nodeType": "StructuredDocumentation",
              "src": "310:516:14",
              "text": " @dev Whenever an {IKIP7} `amount` is transferred to this contract via {IKIP7-safeTransfer}\n or {IKIP7-safeTransferFrom} by `operator` from `from`, this function is called.\n {onKIP7Received} must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IKIP7Receiver.onKIP7Received.selector`."
            },
            "functionSelector": "9d188c22",
            "id": 2016,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onKIP7Received",
            "nameLocation": "840:14:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2005,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "872:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2016,
                  "src": "864:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2004,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "864:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2007,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "898:4:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2016,
                  "src": "890:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2006,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "890:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2009,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "920:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2016,
                  "src": "912:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2008,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "912:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2011,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "951:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2016,
                  "src": "936:20:14",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2010,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "936:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "854:108:14"
            },
            "returnParameters": {
              "id": 2015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2014,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2016,
                  "src": "981:6:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 2013,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "981:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "980:8:14"
            },
            "scope": 2017,
            "src": "831:158:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2018,
        "src": "280:711:14",
        "usedErrors": []
      }
    ],
    "src": "255:737:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.8",
  "updatedAt": "2022-08-11T14:10:46.067Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "onKIP7Received(address,address,uint256,bytes)": {
        "details": "Whenever an {IKIP7} `amount` is transferred to this contract via {IKIP7-safeTransfer} or {IKIP7-safeTransferFrom} by `operator` from `from`, this function is called. {onKIP7Received} must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IKIP7Receiver.onKIP7Received.selector`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}